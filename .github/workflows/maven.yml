# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install GitHub CLI
      run: sudo apt-get install -y gh
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dtest='!FileServiceTest,!ImportExportServiceTest' -DfailIfNoTests=false
      
    - name: Upload package to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PACKAGE_NAME=$(ls target/*.jar)
        TAG_NAME="latest"

        if gh release view $TAG_NAME > /dev/null 2>&1; then
          echo "Updating existing release..."
          gh release upload $TAG_NAME $PACKAGE_NAME --clobber
        else
          echo "Creating new release..."
          gh release create $TAG_NAME $PACKAGE_NAME --title "Latest Release" --notes "Automated release with the latest package."
        fi

